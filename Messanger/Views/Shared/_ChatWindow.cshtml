@model Messanger.Models.ViewModels.HomePageViewModel
@using System.Text.Encodings.Web
@using System.Text.RegularExpressions
@using System.IO

@if (Model.SelectedChatId == null && Model.SelectedGroupId == null)
{
    <div class="d-flex flex-grow-1 justify-content-center align-items-center">
        <span class="text-muted">Оберіть чат або групу ліворуч</span>
    </div>
}
else
{
    <div class="mb-3">
        <h5>
            @(
                Model.SelectedChatId != null
                ? "Чат з " +
                (Model.Chats
                .FirstOrDefault(c => c.UserId == Model.SelectedChatId)
                ?.Login
                ?? "невідомим користувачем")
                : (
                Model.Groups
                .FirstOrDefault(g => g.GroupId == Model.SelectedGroupId)
                ?.Name
                ?? "Групу не знайдено"
                )
                )
        </h5>
    </div>

    <div id="messages" class="messages mb-3 flex-grow-1">
        @foreach (var m in Model.Messages)
        {
            <div class="message-wrapper @(m.IsOwn ? "justify-content-end" : "justify-content-start")"
                 data-message-id="@m.Id">
                <img src="@(m.IsOwn ? Model.CurrentUserAva : m.UserAvatar)"
                     class="avatar @(m.IsOwn ? "ms-2" : "me-2")"
                     data-user-id="@(m.IsOwn ? Model.CurrentUserId : m.UserId)" />
                <div class="message @(m.IsOwn ? "message-right" : "message-left")">
                   
                    @if (m.HasText)
                    {
                        var encoded = HtmlEncoder.Default.Encode(m.Text!);
                        var linked = Regex.Replace(encoded,
                        @"(https?://\S+)",
                        "<a href=\"$1\" target=\"_blank\">$1</a>");
                        @Html.Raw(linked.Replace("\n", "<br/>"))
                    }

                    
                    @if (m.HasFile)
                    {
                        var ext = System.IO.Path.GetExtension(m.FileName!)?.ToLowerInvariant();
                        <div class="file-container mb-2">
                            @if (new[] { ".jpg", ".jpeg", ".png", ".gif", ".webp" }.Contains(ext))
                            {
                                <img src="@m.FileUrl"
                                     class="msg-img preview-image rounded mb-1"
                                     loading="lazy" />
                            }
                            else if (new[] { ".mp4", ".webm", ".mov" }.Contains(ext))
                            {
                                <video controls
                                       src="@m.FileUrl"
                                       class="msg-video preview-video mb-1"></video>
                            }
                            else if (new[] { ".mp3", ".wav", ".ogg" }.Contains(ext))
                            {
                                <audio controls
                                       src="@m.FileUrl"
                                       class="w-100 preview-audio mb-1"></audio>
                            }
                            else
                            {
                                <a href="@m.FileUrl"
                                   class="btn btn-sm btn-outline-secondary">
                                    <i class="bi bi-file-earmark"></i> @m.FileName
                                </a>
                            }
                            <a href="@m.FileUrl"
                               download="@m.FileName"
                               class="preview-download btn btn-sm btn-outline-primary ms-2">
                                ⬇️ Завантажити
                            </a>
                        </div>
                    }

                    <div class="message-time">@m.CreatedAt.ToLocalTime():HH:mm</div>
                </div>
            </div>
        }
    </div>

    
    <partial name="_ChatInput" model="Model" />
}
